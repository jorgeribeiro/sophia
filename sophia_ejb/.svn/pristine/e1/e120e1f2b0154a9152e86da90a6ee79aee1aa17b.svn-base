			                     __    _      
			   _________  ____  / /_  (_)___ _
			  / ___/ __ \/ __ \/ __ \/ / __ `/
			 (__  ) /_/ / /_/ / / / / / /_/ / 
			/____/\____/ .___/_/ /_/_/\__,_/  
			          /_/                   


Configurar tlsClients em um projeto:
Adiciona no build path na aba "Projects" e "Deployment Assembly"
Para projetos .WAR: adiciona no projeto único
Para projetos .EAR: adiciona em "Projects" no EJB e no "Deployment Assembly" no EAR

TODO (para finalizar):
- Presenças duplicadas (tabela frequencia)
- não permitir participante_inscrito_id e dias_atividade_id iguais na tabela
- Separar login e cadastro para fazer o link com o portal da ESCEX
- Disponibilizar o material do professor para os alunos
- Gerar JSON no ZK
- Pesquisar os cursos em que o participante está inscrito (tela Gerenciar participantes, remover Município/Estado)

- Criar filtro para eventos realizados 
- Novo tipo de usuário: jurisdicionado não-gestor (não possuem cadastro interno no TCE)
- Reformular estrutura do colaborador
	- Banco de talentos, habilidades, perfil (dados para facilitar consulta)
- Criação de novas atividades para número extra de pré-inscrições
- Mandato/órgão para jurisdicionado na inscrição (método findMandatosByResponsavelDataVigencia2 em MandatoFacadeBean)
- Impedimento de inscrições
- Solicitar sala de reunião pelo SOPHIA (e convidar os participantes)
	- Agenda com alocação de salas por horário
- Relatórios (relatório de capacitação por participante, anual, total etc)

TODO (para melhorar):
- Materiais da atividade
- Logs de gerenciamento (utilizar tabela changelog?)
- Checagem de datas (data início < data fim etc)

# Método para buscar mandato de jurisdicionado:
for (Mandato m : mandatoFacade.findMandatosByResponsavelDataVigencia2(usuarioJuris.getResponsavelId(),
				2017)) {
	System.out.println(m.getCargoStr());
	System.out.println(m.getDataPosseStr());
	System.out.println(m.getMandatoId());
	System.out.println(m.getNomeUnidade());
}

# Combobox com values true ou false:
<combobox width="98px"
	value="@load(vm.atividade.geraCertificado ? 'SIM' : 'NÃO')"
	selectedItem="@save(vm.atividade.geraCertificado)">
	<comboitem label="SIM" value="true" />
	<comboitem label="NÃO"
		value="false" />
</combobox>
Devem utilizar @save em selectedItem para evitar bug.

# Passos para criação de novo template de certificado
- Utilizar modelo certificado.jrxml que está em sophia_gerenciamento/jasper/
- Criar template e testar
- Adicionar imagens utilizadas no template em sophia_gerenciamento/imagens/ (as imagens devem ter o mesmo nome e formato no Jasper Studio e no projeto ZK)
- Compilar jrxml: botão direito no arquivo > Compile Report
- Realizar upload do arquivo compilado certificado.jasper no Sophia Gerenciamento
- Salvar alterações